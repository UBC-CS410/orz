package stuffplotter.signals;

import stuffplotter.shared.Event;

import com.google.gwt.event.shared.GwtEvent;

/**
 * Event that gets fired when an event is successfully created.
 */
public class EventCreatedEvent extends GwtEvent<EventCreatedEventHandler>
{
	public static Type<EventCreatedEventHandler> TYPE = new Type<EventCreatedEventHandler>();
	private final Long eventID;
	private final String eventName;
	private final String ownerID;
	private final Event eventInstance;
	
	/**
	 * Constructor for an EventCreatedEvent.
	 * @pre true;
	 * @post true;
	 * @param eventID - the ID of the event auto-generated by the server.
	 */
	public EventCreatedEvent(Long eventID, String eventName, String ownerID, Event eventInstance)
	{
		this.eventID = eventID;
		this.eventName = eventName;
		this.ownerID = ownerID;
		this.eventInstance = eventInstance;
	}
	
	/**
	 * Retrieve the ID for the event that was created.
	 * @pre true;
	 * @post true;
	 * @return the ID for the event that was created.
	 */
	public Long getEventID()
	{
		return this.eventID;
	}
	
	/**
	 * Retrieve the Owner ID for the event
	 */
	public String getOwnerID()
	{
		return this.ownerID;
	}
	
	/**
	 * Retrieve the event name
	 */
	public String getEventName()
	{
		return this.eventName;
	}
	
	/**
	 * Retrieve the event instance
	 */
	public Event getEventInstance()
	{
		return this.eventInstance;
	}
	
	@Override
	public Type<EventCreatedEventHandler> getAssociatedType()
	{
		return TYPE;
	}

	@Override
	protected void dispatch(EventCreatedEventHandler handler)
	{
		handler.onEventCreated(this);
	}
}
